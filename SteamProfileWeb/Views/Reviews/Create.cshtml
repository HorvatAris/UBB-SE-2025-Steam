@model SteamProfileWeb.ViewModels.CreateReviewViewModel
@{
    ViewData["Title"] = "Write a Review";
    int gameId = Model.GameId;
}
<div class="container mt-4">
    <h2>Write a Review</h2>
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
    }
    <form asp-action="Create" asp-route-gameId="@gameId" method="post">
        @Html.AntiForgeryToken()
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="mb-3">
            <label asp-for="Title" class="form-label">Title</label>
            <input asp-for="Title" class="form-control" />
            <span asp-validation-for="Title" class="text-danger"></span>
        </div>
        <div class="mb-3">
            <label asp-for="Content" class="form-label">Content</label>
            <textarea asp-for="Content" class="form-control" rows="4"></textarea>
            <span asp-validation-for="Content" class="text-danger"></span>
        </div>
        <div class="mb-3">
            <label asp-for="Rating" class="form-label">Rating</label>
            <input asp-for="Rating" type="number" min="1" max="5" step="0.5" class="form-control" />
            <span asp-validation-for="Rating" class="text-danger"></span>
        </div>
        <div class="mb-3 form-check">
            <input asp-for="IsRecommended" class="form-check-input" />
            <label asp-for="IsRecommended" class="form-check-label">Recommended?</label>
        </div>
        <button type="submit" class="btn btn-primary">Submit Review</button>
        <a asp-action="Index" asp-route-gameId="@gameId" class="btn btn-secondary ms-2">Cancel</a>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
} 